@page "/Tecnico/Index/"
@inject TecnicoService tecnicoService
@inject TiposTecnicoService tipoTecnicoService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

@*Consulta*@
<div class="card">
    <div class="card-header bg-warning text-center">
        <h1>Consulta T&eacute;cnico</h1>
    </div>
    <div class="card-body">
        <div class="text-end">
            <div class="px-1">
                <button type="button" class="btn btn-outline-primary" @onclick="Crear">Crear</button>
            </div>
        </div>
        @*Filtrar con sus condiciones*@
        <div class="row">
            <div class="col-md-0.5">
                <label>Buscar por:</label>
            </div>
            <div class="col-md-3">
                <InputSelect @bind-Value="Opción" class="form-select">
                    <option value="0">Seleccione el Campo</option>
                    <option value="1">ID</option>
                    <option value="2">Sueldo Hora</option>
                    <option value="3">Tipo T&eacute;cnico</option>

                </InputSelect>
            </div>
            <div class="col-auto">
                @switch (Opción)
                {
                    case 1:
                        <div class="input-group">
                            <InputNumber min="1" @bind-Value="Tecnico.TecnicoId" class="form-control"></InputNumber>
                            <button type="button" class="btn btn-primary bi bi-search" @onclick="Buscar"> Buscar</button>
                        </div>
                        break;
                    case 2:
                        <div class="input-group">
                            <InputNumber min="0.01" @bind-Value="Tecnico.SueldoHora" class="form-control"></InputNumber>
                            <button type="button" class="btn btn-primary bi bi-search" @onclick="Buscar"> Buscar</button>
                        </div>
                        break;
                    case 3:
                        <div class="input-group">
                            <InputText min="1" @bind-Value="Filtrar" class="form-control"></InputText>
                            <button type="button" class="btn btn-primary bi bi-search" @onclick="Buscar"> Buscar</button>
                        </div>
                        break;
                }
            </div>
        </div>
        <br>
        @*Tabla Tecnicos*@
        <table class="table">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Nombres</th>
                    <th>Sueldo Hora</th>
                    <th>Tipo T&eacute;cnico</th>
                    <th>Detalle</th>
                    <th>Editar</th>
                    <th>Eliminar</th>
                </tr>
            </thead>
            @*Datos Tecnicos*@
            <tbody>
                @foreach (var tecnico in ListaTecnicos)
                {
                    <tr>
                        <td>@tecnico.TecnicoId</td>
                        <td>@tecnico.Nombres</td>
                        <td>@tecnico.SueldoHora</td>
                        <td>@(ListTipos.FirstOrDefault(t => t.TipoId == tecnico.TipoTecnicoId)?.Descripción)</td>
                        <td>
                            <a href="/Tecnico/Details/@tecnico.TecnicoId" class="bi bi-eye-fill" style="font-size: 1.5em;"></a>
                        </td>
                        <td>
                            <a href="/Tecnico/Edit/@tecnico.TecnicoId" class="bi bi-journal-medical" style="font-size: 1.5em;"></a>
                        </td>
                        <td>
                            <a href="/Tecnico/Delete/@tecnico.TecnicoId" class="bi bi-trash" style="font-size: 1.5em;"></a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <div class="card-footer">
            <div class="row">
                <div class="col-md-9">
                    <h6 class="align-content-between">Total de T&eacute;cnicos: @ListaTecnicos.Count()</h6>
                </div>
                <div class="col-md-3 text-right">
                    <h6 class="align-content-end">Total de Sueldo Hora: @TotalSueldoHora</h6>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    public Tecnicos Tecnico { get; set; } = new Tecnicos();
    public List<Tecnicos> ListaTecnicos { get; set; } = new List<Tecnicos>();
    public List<TiposTecnicos> ListTipos { get; set; } = new List<TiposTecnicos>();
    public decimal TotalSueldoHora => ListaTecnicos.Sum(tecnico => tecnico.SueldoHora);
    public int? Opción { get; set; } = 0;
    private string Filtrar = "";

    protected override async Task OnInitializedAsync()
    {
        ListaTecnicos = await tecnicoService.Listar(t => true);
        ListTipos = await tipoTecnicoService.Listar(t => true);
    }
    public async Task Buscar()
    {
        switch (Opción)
        {
            case 1:
                ListaTecnicos = await tecnicoService
                .Listar(t => t.TecnicoId == Tecnico.TecnicoId);
                break;
            case 2:
                ListaTecnicos = await tecnicoService
                .Listar(t => t.SueldoHora == Tecnico.SueldoHora);
                break;
            case 3:
                var mismo = await tipoTecnicoService.Listar(t => t.Descripción.ToLower().Contains(Filtrar.ToLower()));
                var mismotiposId = mismo.Select(t => t.TipoId).ToList();

                ListaTecnicos = await tecnicoService.Listar(t => mismotiposId.Contains(t.TipoTecnicoId));
                break;
        }
    }
    public Task Crear()
    {
        NavigationManager.NavigateTo("/Tecnico/Create/");
        return Task.CompletedTask;
    }
}