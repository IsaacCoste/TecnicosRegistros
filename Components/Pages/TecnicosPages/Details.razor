@page "/TecnicoDetails/"
@page "/TecnicoDetails/{TecnicoId:int}"
@inject TecnicosServices tecnicoservice
@inject NavigationManager navigationManager;
@rendermode InteractiveServer

@if (Tecnico != null)
{
    <div class="card">
        <div class="card-header">
            <h1>Detalle </h1>
        </div>
        <div class="card-body">
            <h5 class="card-title">Detalles de T&eacute;cnico</h5>
            <dl class="row">
                <dt class="col-sm-3">ID:</dt>
                <dd class="col-sm-9">@Tecnico.TecnicoId</dd>

                <dt class="col-sm-3">Nombre:</dt>
                <dd class="col-sm-9">@Tecnico.Nombres</dd>

                <dt class="col-sm-3">Sueldo Hora:</dt>
                <dd class="col-sm-9">@Tecnico.SueldoHora</dd>
            </dl>
        </div>
        <div class="card-footer text-lg-center">
            <button type="button" class="btn btn-outline-primary" @onclick="Volver">Volver <i class="bi bi-arrow-return-left" /></button>
        </div>
    </div>
}
@code {
    [Parameter]
    public int TecnicoId { get; set; }
    public Tecnicos Tecnico { get; set; } = new Tecnicos();

    public string Notification { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        if (TecnicoId > 0)
        {
            Tecnico.TecnicoId = TecnicoId;
            await Buscar();
        }
    }
    public async Task Buscar()
    {
        var TecnicoEncontrado = await tecnicoservice.Buscar(Tecnico.TecnicoId);

        if (TecnicoEncontrado != null)
        {
            this.Tecnico = TecnicoEncontrado;
        }
    }
    public void Volver()
    {
        navigationManager.NavigateTo("/TecnicoIndex");
    }
}
