@page "/Tecnico/Delete/{TecnicoId:int}"
@inject TecnicoService tecnicoService
@inject NavigationManager navigationManager;
@rendermode InteractiveServer

<div class="card">
    <div class="card-header bg-warning">
        <h1>Eliminar T&eacute;cnico</h1>
    </div>
    <div class="card-body">
        <h5 class="card-title">¡Desea eliminar el T&eacute;cnico!</h5>
        <dl class="row">
            <dt class="col-sm-3">ID:</dt>
            <dd class="col-sm-9">@Tecnico.TecnicoId</dd>

            <dt class="col-sm-3">Nombre:</dt>
            <dd class="col-sm-9">@Tecnico.Nombres</dd>

            <dt class="col-sm-3">Sueldo Hora:</dt>
            <dd class="col-sm-9">@Tecnico.SueldoHora</dd>
        </dl>
    </div>
    <div class="card-footer text-lg-center">
        <button type="button" class="btn btn-danger" @onclick="Eliminar">Eliminar <i class="bi bi-trash3" /></button>
        <button type="button" class="btn btn-outline-primary" @onclick="Volver">Volver <i class="bi bi-arrow-return-left" /></button>
    </div>
</div>

@code {
    [Parameter]
    public int TecnicoId { get; set; }
    public Tecnicos Tecnico { get; set; } = new Tecnicos();

    public string Notification { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
            Tecnico.TecnicoId = TecnicoId;
            Tecnico = await tecnicoService.Buscar(Tecnico.TecnicoId);
    }
    public async Task Eliminar()
    {
        if (Tecnico.TecnicoId > 0)
        {
            await tecnicoService.Eliminar(Tecnico);
            await Volver();
        }
    }
    public Task Volver()
    {
        navigationManager.NavigateTo("/Tecnico/Index");
        return Task.CompletedTask;
    }
}