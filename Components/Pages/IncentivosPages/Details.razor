@page "/Incentivo/Details/{IncentivoId:int}"
@inject IncentivoService incentivoService
@inject TecnicoService tecnicoService
@inject NavigationManager navigationManager;
@rendermode InteractiveServer

<div class="card">
    <div class="card-header bg-warning">
        <h1>Detalle </h1>
    </div>
    <div class="card-body">
        <h5 class="card-title">Detalles de Incentivo</h5>
        <dl class="row">
            <dt class="col-sm-3">ID:</dt>
            <dd class="col-sm-9">@Incentivo!.IncentivoId</dd>

            <dt class="col-sm-3">Fecha:</dt>
            <dd class="col-sm-9">@Incentivo.Fecha.ToShortDateString()</dd>

            <dt class="col-sm-3">T&eacute;cnico:</dt>
            <dd class="col-sm-9">@(ListTecnicos.FirstOrDefault(t => t.TecnicoId == Incentivo.TecnicoId)?.Nombres)</dd>

            <dt class="col-sm-3">Descripci&oacute;n:</dt>
            <dd class="col-sm-9">@Incentivo.Descripcion</dd>

            <dt class="col-sm-3">Cantidad Servicios:</dt>
            <dd class="col-sm-9">@Incentivo.CantidadServicios</dd>

            <dt class="col-sm-3">Monto:</dt>
            <dd class="col-sm-9">@Incentivo.Monto</dd>
        </dl>
    </div>
    <div class="card-footer text-lg-center">
        <button type="button" class="btn btn-outline-primary" @onclick="Volver">Volver <i class="bi bi-arrow-return-left" /></button>
    </div>
</div>
@code {
    [Parameter]
    public int IncentivoId { get; set; }
    public Incentivos? Incentivo { get; set; } = new Incentivos();
    public List<Tecnicos> ListTecnicos { get; set; } = new List<Tecnicos>();
    protected override async Task OnParametersSetAsync()
    {
        Incentivo!.IncentivoId = IncentivoId;
        Incentivo = await incentivoService.Buscar(Incentivo.IncentivoId);
        ListTecnicos = await tecnicoService.Listar(t => true);
    }
    public Task Volver()
    {
        navigationManager.NavigateTo("/Incentivo/Index");
        return Task.CompletedTask;
    }
}
