@page "/Incentivo/Index/"
@inject IncentivoService incentivoService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

@*Consulta*@
<div class="card">
    <div class="card-header bg-warning text-center">
        <h1>Consulta Incentivo</h1>
    </div>
    <div class="card-body">
        <div class="text-end">
            <div class="px-1">
                <button type="button" class="btn btn-outline-primary" @onclick="Crear">Crear</button>
            </div>
        </div>
        @*Filtrar con sus condiciones*@
        <div class="row">
            <div class="col-md-0.5">
                <label>Buscar por:</label>
            </div>
            <div class="col-md-3">
                <InputSelect @bind-Value="Opcion" class="form-select">
                    <option value="0">Seleccione el Campo</option>
                    <option value="1">ID</option>
                    <option value="2">Tecnico</option>
                </InputSelect>
            </div>
            <div class="col-auto">
                @switch (Opcion)
                {
                    case 1:
                        <div class="input-group">
                            <InputNumber min="1" @bind-Value="Incentivo!.IncentivoId" class="form-control"></InputNumber>
                            <button type="button" class="btn btn-primary bi bi-search" @onclick="Buscar"> Buscar</button>
                        </div>
                        break;
                    case 2:
                        <div class="input-group">
                            <InputText @bind-Value="Incentivo.Tecnicos!.Nombres" class="form-control"></InputText>
                            <button type="button" class="btn btn-primary bi bi-search" @onclick="Buscar"> Buscar</button>
                        </div>
                        break;
                }
            </div>
        </div>
        <br>
        @*Tabla Tecnicos*@
        <table class="table">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Fecha</th>
                    <th>TecnicoId</th>
                    <th>Descripci&oacute;n</th>
                    <th>Cantidad Servicios</th>
                    <th>Monto</th>
                    <th>Detalle</th>
                    <th>Editar</th>
                    <th>Eliminar</th>
                </tr>
            </thead>
            @*Datos Tecnicos*@
            <tbody>
                @foreach (var Incentivo in ListaIncentivos)
                {
                    <tr>
                        <td>@Incentivo.IncentivoId</td>
                        <td>@Incentivo.Fecha.ToShortDateString()</td>
                        <td>@Incentivo.Tecnicos!.TecnicoId</td>
                        <td>@Incentivo.Descripcion</td>
                        <td>@Incentivo.CantidadServicios</td>
                        <td>@Incentivo.Monto</td>
                        <td>
                            <a href="/Incentivo/Details/@Incentivo.IncentivoId" class="bi bi-eye-fill" style="font-size: 1.5em;"></a>
                        </td>
                        <td>
                            <a href="/Incentivo/Edit/@Incentivo.IncentivoId" class="bi bi-journal-medical" style="font-size: 1.5em;"></a>
                        </td>
                        <td>
                            <a href="/Incentivo/Delete/@Incentivo.IncentivoId" class="bi bi-trash" style="font-size: 1.5em;"></a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <div class="card-footer">
            <div class="row">
                <div class="col-md-9">
                    <h6 class="align-content-between">Total de Incentivos: @ListaIncentivos.Count()</h6>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    public Incentivos Incentivo { get; set; } = new Incentivos();
    public List<Incentivos> ListaIncentivos { get; set; } = new List<Incentivos>();
    public int? Opcion { get; set; } = 0;
    protected override async Task OnInitializedAsync()
    {
        ListaIncentivos = await incentivoService.Listar(t => true);
    }
    public async Task Buscar()
    {
        switch (Opcion)
        {
            case 1:
                ListaIncentivos = await incentivoService
                .Listar(i => i.IncentivoId == Incentivo.IncentivoId);
                break;
            case 2:
                ListaIncentivos = await incentivoService
                .Listar(t => t.Tecnicos!.Nombres == Incentivo.Tecnicos!.Nombres);
                break;
        }
    }
    public Task Crear()
    {
        NavigationManager.NavigateTo("/Incentivo/Create/");
        return Task.CompletedTask;
    }
}